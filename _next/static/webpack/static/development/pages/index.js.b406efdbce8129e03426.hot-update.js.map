{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.b406efdbce8129e03426.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport Head from \"next/head\";\r\nimport Nav from \"../components/nav\";\r\n\r\nconst canvasWidth = 1920;\r\nconst canvasHeight = 1274;\r\nconst wheelWidth = 740;\r\nconst wheelHeight = 744;\r\nlet wheelDeg = 0;\r\nlet canvas = {};\r\nlet wheelImage = {};\r\n\r\nconst getRatio = () => {\r\n  const canvasWidth = 1920;\r\n  return window.innerWidth / canvasWidth;\r\n}\r\n\r\nconst toRadian = (deg) => {\r\n  return deg * Math.PI / 180;\r\n}\r\n\r\nconst drawWheel = () => {\r\n  const wheelCtx = canvas.wheelCtx;\r\n  wheelCtx.clearRect(wheelImage.imageX, wheelImage.imageY, wheelImage.imageWidth, wheelImage.imageHeight);\r\n  wheelCtx.save();\r\n  wheelCtx.setTransform(1,0,0,1,0,0);\r\n  wheelCtx.translate(wheelImage.imageX + wheelImage.imageWidth / 2, wheelImage.imageY + wheelImage.imageHeight / 2);\r\n  wheelCtx.rotate(toRadian(wheelDeg));\r\n  // ctx.strokeRect(0 - wheelImage.imageWidth / 2, 0 - wheelImage.imageHeight / 2, wheelImage.imageWidth, wheelImage.imageHeight);\r\n\r\n  wheelCtx.drawImage(\r\n    wheelImage.image,\r\n    0 - wheelImage.imageWidth / 2,\r\n    0 - wheelImage.imageHeight / 2,\r\n    wheelImage.imageWidth,\r\n    wheelImage.imageHeight\r\n  );\r\n\r\n  canvas.wheelCtx.restore();\r\n\r\n  wheelDeg = wheelDeg > 360 ? 0 : wheelDeg + 0.05;\r\n  requestAnimationFrame(drawWheel);\r\n}\r\n\r\nconst Home = () => {\r\n\r\n  useEffect(() => {\r\n    const backgroundImage = {\r\n      image: new Image(),\r\n      imageWidth: 1920,\r\n      imageHeight: 1274,\r\n      imageX: 1,\r\n      imageY: 1\r\n    };\r\n\r\n    const ratio = getRatio();\r\n    const backgroundCanvas = document.getElementById('backgroundCanvas');\r\n    const wheelCanvas = document.getElementById('wheelCanvas');\r\n    canvas = {\r\n      backgroundCanvas,\r\n      backgroundCtx: backgroundCanvas.getContext('2d'),\r\n      wheelCanvas,\r\n      wheelCtx: wheelCanvas.getContext('2d')\r\n    };\r\n\r\n    backgroundImage.image.onload = () => {\r\n      canvas.backgroundCtx.drawImage(\r\n        backgroundImage.image,\r\n        backgroundImage.imageX,\r\n        backgroundImage.imageY,\r\n        backgroundImage.imageWidth,\r\n        backgroundImage.imageHeight\r\n      );\r\n    };\r\n    backgroundImage.image.src = '/static/images/amusement-park.png';\r\n\r\n    wheelImage = {\r\n      image: new Image(),\r\n      imageWidth: wheelWidth,\r\n      imageHeight: wheelHeight,\r\n      imageX: 765,\r\n      imageY: 365\r\n    };\r\n    wheelImage.image.src = '/static/images/wheel.png';\r\n    drawWheel();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Hisney Land | develope hub page</title>\r\n      </Head>\r\n\r\n      {/*<Nav />*/}\r\n\r\n      <main className=\"contents\">\r\n        <h1 className=\"title\">Hisney Land</h1>\r\n        <p className=\"description\">Hub page</p>\r\n        <div className=\"wrap-canvas\">\r\n          <canvas id=\"backgroundCanvas\" className=\"background-canvas\" width={canvasWidth} height={canvasHeight}></canvas>\r\n          <canvas id=\"wheelCanvas\" className=\"wheel-canvas\" width={canvasWidth} height={canvasHeight}></canvas>\r\n        </div>\r\n      </main>\r\n\r\n      <style jsx>{`\r\n      .contents {\r\n        height: 100vh;\r\n      }\r\n      .wrap-canvas {\r\n        position: relative;\r\n      }\r\n      .background-canvas,\r\n      .wheel-canvas{\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n      }\r\n      .background-canvas {\r\n        background-color: #fff;\r\n      }\r\n      .title {\r\n        margin: 0;\r\n        width: 100%;\r\n        padding-top: 30px;\r\n        font-size: 48px;\r\n        text-align: center;\r\n        color: #272e59;\r\n      }\r\n      .description {\r\n        text-align: center;\r\n      }\r\n    `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAOA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AA+CA;AACA;AACA;;;;A","sourceRoot":""}